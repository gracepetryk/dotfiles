name: Review Enforcement

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]
  pull_request_review:
    types: [submitted, edited, dismissed]

jobs:
  remove-label:
    if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
      - id: approved-in-meeting
        uses: actions/labeler@v5
        with:
          sync-labels: true
  has-two-reviews-or-approved-in-meeting-label:
    if: ${{ always() }}
    needs: remove-label

    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            let reviews = await github.rest.pulls.listReviews({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
            });

            if (reviews && reviews.data.filter((r) => r.status === "APPROVED").length >= 2) {
                process.exit(0);
            }

            let labels = await github.rest.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number
            });

            if (labels && labels.data.find((label) => label.name === "approved-in-meeting")) {
                process.exit(0);
            } else {
                process.exit(1);
            }
